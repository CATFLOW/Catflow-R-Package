\newpage
\section*{Introduction} 
\addcontentsline{toc}{section}{Introduction}

\proglang{CATFLOW}  \citep{Maurer+Zehe:2007} is a physically based, distributed model for simulating the dynamics of water and solutes in small rural catchments on the event and season time scale. 
The \pkg{Catflow} package is a collection of utilities for pre- and postprocessing functionality
for \proglang{CATFLOW}, 
written for the \proglang{R} system for statistical computing
\citep[\url{http://www.R-project.org/}]{R:2009}.

This vignette is intended to serve as an tutorial on how to use the tools of the
\pkg{Catflow} package, providing a step-by-step example of a (simple) modelling session. 
For further information on individual functions, please refer to the respective help pages via \code{?NameOfTheFunction}.

The tutorial is organized in two parts.

Part~\ref{sec:preproc} explains how to create \proglang{CATFLOW} models for the simulation of a hillslope:
\begin{itemize}
\item generate the model geometry, in terms of a system of curvilinear orthogonal coordinates, starting from a slope profile line (Section~\ref{sec:geometry}, p.~\pageref{sec:geometry}),
\item write input files that relate to the modelled geometry or time-series which are to be included in the model (Section~\ref{sec:input}, p.~\pageref{sec:input}),
\item simulate three different types of macropores and prepare an appropriate model geometry (Section~\ref{sec:macro}, p.~\pageref{sec:macro}).
\end{itemize}

Part~\ref{sec:postproc} provides details on how to extract and visualise the results
from \proglang{CATFLOW} simulations.

To illustrate the usage of \pkg{Catflow}, we first load the package and 
create a sub-directory within the current working dir, where all the files for our sample CATFLOW session are collected (the project directory \verb+Catflow-TEST+). The next lines are \proglang{R} code that can be executed after copying to the console:

<<prelim>>=
library("Catflow")
if(!file_test("-d", "./Catflow-TEST")) dir.create("./Catflow-TEST")
@

Please note: \pkg{Catflow} requires the packages  \pkg{deSolve}, \pkg{splines}, \pkg{zoo}, \pkg{RColorBrewer}. If these are not present (or installed automatically together with \pkg{Catflow}, you would have to install them separately from CRAN.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newpage
\part[Preprocessing for CATFLOW]{Preprocessing for \proglang{CATFLOW}}\label{sec:preproc}


\newpage
This part describes how model geometry and other input files in the specific file formats for \proglang{CATFLOW} can be created.

\section[CATFLOW model geometry]{\proglang{CATFLOW} model geometry}\label{sec:geometry}
To generate a \proglang{CATFLOW} model geometry, we need a slope profile line. This could either be obtained from a GIS (Geographic Information System), e.g. using the CATFLOW ArcGIS wizard \citep{Reusser:2006}, or it may be specified manually.
Suppose we have the following slope line, represented by 20 points and associated values for slope elevation and width of the slope (Fig.~\ref{fig:slopeline}):
<<slopelineDecl>>=
# northing of slope line 
  north <- seq(1,11, length=20)  
# easting of slope line
  east  <- seq(2, 8, length=20)
# elevation of at points of slope line
  elev  <- approx(c(8,5),n=20)$y + sin((0:19)/2)/5 
# width of slope at points of slope line (here: uniform) 
  slopewidth <- rep(1,20)  
@

\begin{figure}[h!]
\begin{center}
<<slopelineFig, fig=TRUE, echo=FALSE,height=5,width=6>>=
opa <- par(mfrow=c(2,1), mar=c(4,4,1,1), lend=1)
plot(north, east, t="b", xlab="Northing", ylab="Easting", 
      ylim=c(1,9), xlim=c(0.5,11.5))           
lines(north,east, col="yellow", lwd=30)
lines(north,east, t="b")     
legend("bottomr", c("slope line","slope area"), pch=c(21,NA), lty=1, lwd=c(1,30), col=c(1,"yellow"), bty="n")
 legend("topl", "Map", lty=0, pch=NA, bty="n")

plot(sqrt((north-1)^2 + (east-2)^2), elev, ylab="Elevation [m]",
xlab="Distance along slope line [m]", t="b",         
ylim=c(4,9), xlim=c(-.5,12.5) )
 legend("bottomleft", "Profile", lty=0, pch=NA, bty="n")
par(opa)
@
\caption{\label{fig:slopeline} Schematic of slope line in map and profile view}
\end{center}
\end{figure}

Now suppose we want to generate a CATFLOW geometry from this slope line with a constant thickness of 2 m (\code{htyp = 1, dyy = 2}) and a discretization of 21 nodes to the lateral (\code{xsi}) and 11 nodes to the vertical (\code{eta}). 
 We collect all the values needed, including the total area of the slope and the filename for the output, in a list:
<<slopelistDecl>>=
simple.slope <- list( xh = north,
                      yh = east,
                      zh = elev,
                      bh = slopewidth,
                      tot.area = 12 ,
                      htyp = 1, 
                      dyy = 2,
                      xsi = seq(0,1,length = 21),
                      eta = seq(0,1,length = 11),
                      out.file="test.geo"      )                    
@

With this list we are ready to generate a CATFLOW geometry using \code{make.geometry()}, which  produces a text file for CATFLOW (\code{out.file="test.geo"}) in the specified directory (\code{project.path = "Catflow-TEST/in"}), and generates a plot of the geometry (Fig.~\ref{fig:geometry}):

\begin{Schunk}
\begin{Sinput}
 test.geom <- make.geometry(simple.slope, project.path = "Catflow-TEST/in/")
   
 file.show("Catflow-TEST/in/test.geo")              ## display the produced file ##
                   
\end{Sinput}
\end{Schunk}

<<makeGeom,echo=FALSE, results=HIDE>>=
  
  test.geom <- make.geometry(simple.slope, plotting=FALSE, project.path = "Catflow-TEST/in/") 
@ 

\begin{figure}[h!]
\begin{center}
<<plotGeom,fig=TRUE, echo=FALSE,results=HIDE,height=4,width=6>>=
opa <- par(mar=c(4,4,1,1))
with(test.geom, matplot(sko,hko, t="l", pch="", ylab="Elevation [m]",
xlab="Distance along slope line [m]"))
with(test.geom, matlines(t(sko),t(hko), t="l", pch=""))
par(opa)
@
\caption{\label{fig:geometry} Model geometry generated with \code{make.geometry()}}
\end{center}
\end{figure}

For further details, see \code{?make.geometry}. For reading the output of the CATLFOW Wizard, see \code{?fromArcGIS}.
More elaborate examples of generating CATFLOW geometries are given in Section \ref{sec:macro} in combination with the simulation of macropores.


